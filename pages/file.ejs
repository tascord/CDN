<!DOCTYPE html>
<html lang="en">
    <head>
        
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <title>...</title>

        <link rel="stylesheet" href="/raw/style.css">

        <meta name="language" content="English">
        <meta name="author" content="tascord">
        <meta name="theme-color" content="#000000">
        <meta property="og:site_name" content="cdn.tascord.ai">
        <meta property="og:url" content="https://cdn.tascord.ai/<%- path %>">
        <meta property="og:title" content="Viewing '<%- path %>'.">
        <meta property="og:description" content="Click to view the document of this text file.">

        <% if (path.match(/\.(png|jp(e|)g|gif)$/i)) { %>
            <meta property="og:image" content="/raw/<%- path %>>">
        <% } %>

    </head>
<body>
    
    <script>

        let file = '<%- path %>';
        let remote_location = `${window.location.origin}/raw/${file}`;

        document.title = file + ' â€” CDN';

        {

            // Download Button
            let elem = document.createElement('a');
            document.body.appendChild(elem);

            elem.innerText = "Download";
            elem.href = remote_location;
            elem.download = file;


        }

        switch(file.split('.')[file.split('.').length - 1].toLowerCase()) {

            case "png":
            case "jpeg":
            case "gif":

                console.log(`Loading image...`);

                {

                    let elem = document.createElement('img');
                    document.body.appendChild(elem);

                    elem.src = remote_location;

                }

            break;

            default:

                console.log(`Loading as text...`);

                {

                    let elem = document.createElement('p');
                    document.body.appendChild(elem);

                    elem.style.whiteSpace = 'pre-wrap';

                    let xhr = new XMLHttpRequest();
                    xhr.onload = () => { elem.innerText = xhr.responseText; };
                    xhr.open('GET', remote_location);
                    xhr.send();

                }

            break;

        }

    </script>

</body>
</html>